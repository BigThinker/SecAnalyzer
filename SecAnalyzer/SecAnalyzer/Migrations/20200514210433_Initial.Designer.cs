// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecAnalyzer.Models;

namespace SecAnalyzer.Migrations
{
    [DbContext(typeof(SecAnalyzerContext))]
    [Migration("20200514210433_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SecAnalyzer.Models.Config", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Config");
                });

            modelBuilder.Entity("SecAnalyzer.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Cash")
                        .HasColumnType("bigint");

                    b.Property<long>("CostOfRevenue")
                        .HasColumnType("bigint");

                    b.Property<long>("DepreciationAndAmortization")
                        .HasColumnType("bigint");

                    b.Property<decimal>("EarningsYield")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("EnterpriseValue")
                        .HasColumnType("bigint");

                    b.Property<decimal>("FreeCashFlowPerShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrahamNetNet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("MarketCap")
                        .HasColumnType("bigint");

                    b.Property<long>("NetIncome")
                        .HasColumnType("bigint");

                    b.Property<decimal>("NetIncomePerShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("NetPropertyPlantAndEquipment")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PERatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceToFreeCashFlowRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriteToTangibleBookRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ResearchAndDevelopmentCosts")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ReturnOnTangibleAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Revenue")
                        .HasColumnType("bigint");

                    b.Property<decimal>("RevenuePerShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("SellingGeneralAndAdministrativeCosts")
                        .HasColumnType("bigint");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TangibleBookValuePerShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("TotalCurrentAssets")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalDebt")
                        .HasColumnType("bigint");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<decimal>("YearlyHighSharePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("YearlyLowSharePrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
